import React, { useEffect, useState, useRef } from 'react';
import { BrowserRouter as Router, Route, Routes, useNavigate  } from 'react-router-dom';
import { Form, Input, Button, notification, Tag, Table, Modal } from 'antd';
import axios from 'axios';
import * as XLSX from 'xlsx';

const RaffleForm = () => {
  const [number, setNumber] = useState(null);
  const [isModalVisible, setIsModalVisible] = useState(false);
  const [password, setPassword] = useState('');
  const navigate = useNavigate();
  const inputRef = useRef(null);
  const handleAdminClick = () => {
    setIsModalVisible(true); // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  };

  const handlePasswordChange = (e) => {
    setPassword(e.target.value);
  };

  const handleOk = () => {
    if (password === '0000') {
      navigate('/admin'); // –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–∞—Ä–æ–ª–µ
      setIsModalVisible(false);
    } else {
      notification.error({ message: '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å!' });
    }
  };

  const handleCancel = () => {
    setIsModalVisible(false);
  };

  const fetchNumber = async () => {
    try {
      const response = await axios.get('https://2323e73ee73ce4dc.mokky.dev/number');
      const availableNumber = response.data.find(num => !num.busy);
      if (availableNumber) setNumber(availableNumber);
    } catch (error) {
      console.error('Error fetching number:', error);
    }
  };

  const onFinish = async (values) => {
    if (!number) {
      notification.error({ message: '–ù–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –Ω–æ–º–µ—Ä–∫–æ–≤.' });
      return;
    }

    try {
      await axios.post('https://2323e73ee73ce4dc.mokky.dev/user', { ...values, number: number.number });
      await axios.patch(`https://2323e73ee73ce4dc.mokky.dev/number/${number.id}`, { busy: true });

      const whatsappMessage = `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!üéâ –í—ã —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ\n–ù–æ–≤—ã–π —É—á–∞—Å—Ç–Ω–∏–∫:\n–§–∞–º–∏–ª–∏—è: ${values.surname}\n–ò–º—è: ${values.name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${values.phone}\n–ù–æ–º–µ—Ä: ${number.number}`;
      window.open(`https://wa.me/+79667283100?text=${encodeURIComponent(whatsappMessage)}`, '_blank');

      notification.success({ message: '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' });
      fetchNumber();
    } catch (error) {
      console.error('Error submitting form:', error);
      notification.error({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏.' });
    }
  };

  useEffect(() => {
    fetchNumber();
  }, []);

  useEffect(() => {
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞, –µ—Å–ª–∏ –º–æ–¥–∞–ª–∫–∞ –≤–∏–¥–∏–º–∞
    if (isModalVisible) {
      const timer = setTimeout(() => {
        inputRef.current?.focus();
      }, 0); // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–∞–π–º–µ—Ä, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É —Ñ–æ–∫—É—Å–∞ –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞

      return () => clearTimeout(timer); // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –º–æ–¥–∞–ª–∫–∏
    }
  }, [isModalVisible]);

  return (
    <div style={{ padding: '24px' }}>
      <h2>–†–æ–∑—ã–≥—Ä—ã—à</h2>
      <p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ.</p>
      <Form layout="vertical" onFinish={onFinish}>
        <Form.Item label="–§–∞–º–∏–ª–∏—è" name="surname" rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ —Ñ–∞–º–∏–ª–∏—é' }]}>
          <Input />
        </Form.Item>
        <Form.Item label="–ò–º—è" name="name" rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –∏–º—è' }]}>
          <Input />
        </Form.Item>
        <Form.Item label="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞" name="phone" rules={[{ required: true, message: '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞' }]}>
          <Input />
        </Form.Item>
        <Button type="primary" htmlType="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</Button>
      </Form>
      <Button type="link" onClick={handleAdminClick} style={{ marginTop: '20px' }}>
        –ü–µ—Ä–µ–π—Ç–∏ –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–Ω–µ–ª–∏
      </Button>

      <Modal
  title="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
  visible={isModalVisible}
  onOk={handleOk}
  onCancel={handleCancel}
  okText="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
  cancelText="–û—Ç–º–µ–Ω–∞"
>
  <Input.Password
   ref={inputRef}
    placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
    value={password}
    onChange={handlePasswordChange}
    onPressEnter={handleOk} // –û—Ç—Ä–∞–±–æ—Ç–∫–∞ –ø–æ Enter
  />
</Modal>

    </div>
  );
};

const AdminPage = () => {
  const [participants, setParticipants] = useState([]);
  const [numbers, setNumbers] = useState([]);
  const navigate = useNavigate();
  

  const fetchParticipants = async () => {
    try {
      const response = await axios.get('https://2323e73ee73ce4dc.mokky.dev/user');
      setParticipants(response.data);
    } catch (error) {
      console.error('Error fetching participants:', error);
      notification.error({ message: '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.' });
    }
  };

  const fetchNumbers = async () => {
    try {
      const response = await axios.get('https://2323e73ee73ce4dc.mokky.dev/number');
      setNumbers(response.data);
    } catch (error) {
      console.error('Error fetching numbers:', error);
    }
  };

  useEffect(() => {
    fetchParticipants();
    fetchNumbers();
  }, []);

  const downloadExcel = () => {
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–π –¥–ª—è Excel
    const worksheetData = participants.map((participant) => ({
      –§–∞–º–∏–ª–∏—è: participant.surname,
      –ò–º—è: participant.name,
      –¢–µ–ª–µ—Ñ–æ–Ω: participant.phone,
      –ù–æ–º–µ—Ä: participant.number,
    }));

    // –°–æ–∑–¥–∞–µ–º –∫–Ω–∏–≥—É Excel –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ª–∏—Å—Ç —Å –¥–∞–Ω–Ω—ã–º–∏
    const worksheet = XLSX.utils.json_to_sheet(worksheetData);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, '–£—á–∞—Å—Ç–Ω–∏–∫–∏');

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏ —Å–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª Excel
    XLSX.writeFile(workbook, 'participants.xlsx');
  };

  const participantColumns = [
    { title: '–§–∞–º–∏–ª–∏—è', dataIndex: 'surname', key: 'surname' },
    { title: '–ò–º—è', dataIndex: 'name', key: 'name' },
    { title: '–¢–µ–ª–µ—Ñ–æ–Ω', dataIndex: 'phone', key: 'phone' },
    { title: '–ù–æ–º–µ—Ä', dataIndex: 'number', key: 'number' },
  ];

  const numberColumns = [
    { title: 'ID', dataIndex: 'id', key: 'id' },
    { title: '–ù–æ–º–µ—Ä', dataIndex: 'number', key: 'number' },
    {
      title: '–°—Ç–∞—Ç—É—Å',
      dataIndex: 'busy',
      key: 'busy',
      render: busy => (
        <Tag color={busy ? 'red' : 'green'}>
          {busy ? '–ó–∞–Ω—è—Ç' : '–°–≤–æ–±–æ–¥–µ–Ω'}
        </Tag>
      ),
    },
  ];

  const handleBackClick = () => {
    navigate(-1); 
  };

  return (
    <div style={{ padding: '24px' }}>
       <Button type="primary" onClick={handleBackClick}>
      –ù–∞–∑–∞–¥
    </Button>
      <h3>–£—á–∞—Å—Ç–Ω–∏–∫–∏</h3>
      <Table columns={participantColumns} dataSource={participants} rowKey="id" />
      <h3 style={{ marginTop: '32px' }}>–ù–æ–º–µ—Ä–∞</h3>
      <Table columns={numberColumns} dataSource={numbers} rowKey="id" />
      <Button type="primary" onClick={downloadExcel} style={{ marginBottom: '16px' }}>
        –°–∫–∞—á–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ Excel
      </Button>
    </div>
  );
};

const App = () => (
  <Router>
    <Routes>
      <Route path="/" element={<RaffleForm />} />
      <Route path="/admin" element={<AdminPage />} />
    </Routes>
  </Router>
);

export default App;
